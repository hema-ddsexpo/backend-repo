{"version":3,"sources":["InputField.js","SubmitButton.jsx","database/UserInfo.jsx","InputForm.js","App.js","reportWebVitals.js","index.js"],"names":["InputField","className","title","type","this","props","placeholder","onChange","e","target","value","React","Component","SubmitButton","disabled","onClick","text","extendObservable","username","InputForm","state","password","buttondisabled","isValidUser","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserInfo","console","log","setInputField","doLogin","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6a44273.chunk.js","sourcesContent":["import './App.css';\r\nimport React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"inputField\" data-tooltip title=\"Field should not be empty!!!!!\">\r\n                                            \r\n                <input\r\n                    className='input'\r\n                    type={this.props.type}\r\n                    placeholder={this.props.placeholder}\r\n                    onChange={(e) => { this.props.onChange(e.target.value) }}\r\n                    value={this.props.value}\r\n                    \r\n                />\r\n                \r\n\r\n             </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputField;\r\n","import './App.css';\r\nimport React from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"submitButton\" >\r\n                <button\r\n                    className={this.props.type}\r\n                    disabled={this.props.disabled}\r\n                    onClick={() => this.props.onClick()}\r\n\r\n                >\r\n                    {this.props.text}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import { extendObservable } from \"mobx\";\r\n\r\nclass UserInfo {\r\n    constructor() {\r\n        extendObservable(this, { \r\n            username: ''\r\n            \r\n        });\r\n    }\r\n}\r\nexport default new UserInfo();","import './App.css';\r\nimport React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserInfo from './database/UserInfo';\r\n\r\nclass InputForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            buttondisabled: false,\r\n            isValidUser:false\r\n        }\r\n    }\r\n    setInputField(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 12) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n    resetForm() {\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            buttondisabled: false\r\n        })\r\n    }\r\n    async doLogin() {\r\n        /*if (!this.state.username)\r\n            return;\r\n        if (!this.state.password)\r\n            return;\r\n        this.setState({\r\n            buttondisabled: true\r\n        })*/\r\n        try {\r\n\r\n            let res = await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password,\r\n                })\r\n            })\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                UserInfo.username = result.username;\r\n                this.setState({\r\n                    isValidUser:true\r\n                });\r\n                \r\n\r\n            }\r\n            else if (result && result.success === false) {\r\n                this.setState({\r\n                    isValidUser:false,\r\n                    buttondisabled:true\r\n                });\r\n               \r\n            }\r\n        }\r\n        catch (e) {\r\n\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    render() {\r\n        if(this.state.isValidUser){\r\n           return(\r\n               \r\n                <div className=\"container\">\r\n                    <label className=\"labelName\">WELCOME {this.state.username} !!!!!</label>\r\n                    <SubmitButton\r\n                        className='btn'\r\n                        text='Log Out'\r\n                        disabled={false}\r\n                        onClick={()=>this.setState({buttondisabled:false,isValidUser:false,username:'',password:''})}\r\n                    />\r\n                </div>\r\n           )\r\n        }\r\n            \r\n            if(this.state.username.length>0 && this.state.buttondisabled) {\r\n                console.log(this.state.username.length)\r\n                console.log(this.state.buttondisabled)\r\n                return(\r\n                \r\n                     <div className=\"container\">\r\n                             <label className=\"labelName\">Sorry {this.state.username} !! not a valid user. Please Try Again</label>\r\n                             <SubmitButton\r\n                               className='btn'\r\n                               text='Try Again'\r\n                               disabled={false}\r\n                               onClick={()=>this.setState({buttondisabled:false,isValidUser:false,username:'',password:''})}\r\n\r\n                             />\r\n                    </div>\r\n                 ) \r\n\r\n             }\r\n       \r\n        \r\n        return (\r\n            <div className=\"container\" >\r\n                <div className='inputForm'>\r\n                    <InputField\r\n                        type='text'\r\n                        placeholder='UserName'\r\n                        value={this.state.username ? this.state.username : ''}\r\n                        onChange={(val) => this.setInputField('username', val)}\r\n                    />\r\n                    <InputField\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        value={this.state.password ? this.state.password : ''}\r\n                        onChange={(val) => this.setInputField('password', val)}\r\n                    />\r\n                    <SubmitButton\r\n                        text='LogIn'\r\n                        type={this.state.buttondisabled?'btndisabled':'btn'}\r\n                        disabled={this.state.buttondisabled}\r\n                        onClick={() => this.doLogin()}\r\n                    />\r\n                   \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputForm;\r\n","import './App.css';\nimport React from 'react';\nimport InputForm from './InputForm';\n\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"app\" >\n        <InputForm />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}